#include "stdafx.h"
#include <iostream>
#include <regex>
#include <string>

//不使用命名空间
//using namespacestd;

void reg()
{
	//将正则规则转化为字符串形式保存一下，正则规则必须需要引号因为是字面值形式
	std::string gz("[^r]ei");
	//alpha是表示字母形式，而apnum表示字符串或者字母两种情况
	gz = "[[:alpha:]]+" + gz +  "[[:alnum:]]*";
	std::regex r(gz);
	std::string str = "friend receive freind receiv110!";
	//存储识别对象
	std::smatch pp;
	//识别方法只是识别第一个满足条件的情况，但是我通过while循环和pos,sz,erase实现源字符串的备份修改从而达到识别所有的目的
	std::string strbf(str);
	//使用备份参与运算，避免源字符串被修改，数据较大时候比较占据内存
	while(regex_search(strbf,pp,r))
	{
		//输出查找的字符串
		std::cout << pp.str() << " ";
		std::string tmp;
		//找到满足条件的字符串的位置
		size_t pos = strbf.find_first_of(pp.str());
		//长度
		size_t sz = pp.str().size();
		//删除掉找的那部分内容
		strbf.erase(pos,sz);
	}
	std::cout << std::endl;
}
